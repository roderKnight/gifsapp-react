{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifsExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValues","setInputValues","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","GetGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifsExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAeA,OACI,uBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAYK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAG,OAAMP,GAAN,mBAAsBO,OACxCN,EAAe,MAMnB,UACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,UAmBpB,gD,+BC3BCG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIKA,EAAKC,OAJV,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCLHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECFwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAEGqB,EDjBwBK,CAAc1B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAKpB,OACI,qCACI,mCAAOpB,EAAP,OAECoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAACC,GAAD,OAEP,aADA,CACC,EAAD,eAEQA,GADCA,EAAIC,aEctBgB,EA/BO,WAGlB,MAAoCzC,mBAAS,CAAC,kBAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAQA,OACI,qCAEI,mDAEA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEA,6BAEY2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCvB1C6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.1b921b56.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValues, setInputValues] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValues(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValues.trim().length > 2){\r\n            setCategories( cat => [ inputValues, ...cat] );\r\n            setInputValues('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValues}\r\n                onChange={handleInputChange}\r\n                />        \r\n            <button>Submit</button>  \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","export const GetGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=TCnBW2mHBnq2bLsexw75t0Kg3r3KJ4EN`;\r\n    const resp = await fetch(url);\r\n    const { data }  = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    //sconsole.log(id, title, url)\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images, loading} = useFetchGifs( category );\r\n\r\n    // console.log( data );\r\n    // console.log( loading );\r\n\r\n    return (\r\n        <>\r\n            <h3> { category } </h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">loading...</p>}\r\n\r\n            <div className=\"bodyCards\">\r\n                {\r\n                    images.map((img)=>( \r\n                        // <li key={id}> {title} </li> \r\n                        <GifGridItem \r\n                            key={img.id} \r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { GetGifs } from \"../helpers/GetGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        GetGifs(category)\r\n            .then(imgs => {\r\n\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n            })\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifsExpertApp = () => {\r\n\r\n    //const categories = ['Jimmy Hendrix', 'Eric Clapton', 'George Harrison'];\r\n    const [categories, setCategories] = useState(['Jimmy Hendrix']);\r\n\r\n    // const handleAdd = () => {\r\n    //     //setCategories( categories.push('Ronnie Wood') );\r\n    //     setCategories( [...categories, 'Ronnie Wood' ] );\r\n    //     // al parecer no se puede agregar metodos\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            {/* <button onClick={ handleAdd }>Add</button> */}\r\n            <h2> Gifs Expert App </h2>\r\n\r\n            <AddCategory setCategories={setCategories} />\r\n\r\n            <hr/>\r\n\r\n            <ol>\r\n                    {\r\n                        categories.map( category => ( \r\n                            <GifGrid key={category} category={category}/>                   \r\n                        ))\r\n                    }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifsExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifsExpertApp from './GifsExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifsExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}